
pulser.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000072  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000000e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000076  00000000  00000000  00000101  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000041  00000000  00000000  00000177  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000088  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000240  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000070  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61

0000001c <__do_copy_data>:
  1c:	10 e0       	ldi	r17, 0x00	; 0
  1e:	a0 e6       	ldi	r26, 0x60	; 96
  20:	b0 e0       	ldi	r27, 0x00	; 0
  22:	e2 e7       	ldi	r30, 0x72	; 114
  24:	f0 e0       	ldi	r31, 0x00	; 0
  26:	02 c0       	rjmp	.+4      	; 0x2c <.do_copy_data_start>

00000028 <.do_copy_data_loop>:
  28:	05 90       	lpm	r0, Z+
  2a:	0d 92       	st	X+, r0

0000002c <.do_copy_data_start>:
  2c:	a0 36       	cpi	r26, 0x60	; 96
  2e:	b1 07       	cpc	r27, r17
  30:	d9 f7       	brne	.-10     	; 0x28 <.do_copy_data_loop>

00000032 <__do_clear_bss>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a0 36       	cpi	r26, 0x60	; 96
  3e:	b1 07       	cpc	r27, r17
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	02 d0       	rcall	.+4      	; 0x48 <main>
  44:	14 c0       	rjmp	.+40     	; 0x6e <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <main>:
#define F_CPU 1200000UL
#include <avr/io.h>
#include <avr/sleep.h>

int main( void )
{
  48:	82 e4       	ldi	r24, 0x42	; 66
  4a:	8f bd       	out	0x2f, r24	; 47
   TCCR0A = _BV( COM0A0 ) + _BV( WGM01 );
                              // Toggle OC0A on Compare Match
                              // CTC Mode

   TCCR0B   = 0x05;           // 1200000/1024 => 1172/sec
  4c:	85 e0       	ldi	r24, 0x05	; 5
  4e:	83 bf       	out	0x33, r24	; 51
   OCR0A    = 117;            // 10 interrupts/sec
  50:	85 e7       	ldi	r24, 0x75	; 117
  52:	86 bf       	out	0x36, r24	; 54

   DDRB  = 0x07;
  54:	87 e0       	ldi	r24, 0x07	; 7
  56:	87 bb       	out	0x17, r24	; 23
   while(1)
   {
      // All processing is handle by the Timer
      // Nothing to do here so just sleep

      set_sleep_mode( SLEEP_MODE_IDLE );
  58:	85 b7       	in	r24, 0x35	; 53
  5a:	87 7e       	andi	r24, 0xE7	; 231
  5c:	85 bf       	out	0x35, r24	; 53
      sleep_mode();
  5e:	85 b7       	in	r24, 0x35	; 53
  60:	80 62       	ori	r24, 0x20	; 32
  62:	85 bf       	out	0x35, r24	; 53
  64:	88 95       	sleep
  66:	85 b7       	in	r24, 0x35	; 53
  68:	8f 7d       	andi	r24, 0xDF	; 223
  6a:	85 bf       	out	0x35, r24	; 53
  6c:	f5 cf       	rjmp	.-22     	; 0x58 <main+0x10>

0000006e <_exit>:
  6e:	f8 94       	cli

00000070 <__stop_program>:
  70:	ff cf       	rjmp	.-2      	; 0x70 <__stop_program>
